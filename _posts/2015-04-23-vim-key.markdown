---
layout: post
title: AppCode环境下的快捷键
date: 2015-04-23 09:54:07 +0800
comments: true
categories: 
---
##Appcode快捷键
将字符串本地化
Press ⌥⏎ on any string in your code to localize it.

##Vim快捷键
Appcode内置支持Vim操作，对Vim越熟悉就能大大提高编码效率。本节依个人使用习惯，对不熟悉的指令进行归类，渐渐加强使用频率。

###使用频率-高

####行内定位 
- fc: 把光标移到同一行的下一个c字符处
- Fc: 把光标移到同一行的上一个c字符处
- tc: 把光标移到同一行的下一个c字符前
- Tc: 把光标移到同一行的上一个c字符后
- ;: 配合fF&tT使用，重复一次

####行间定位
- H: 把光标移到屏幕最顶端一行
- M: 把光标移到屏幕中间一行
- L: 把光标移到屏幕最底端一行
- [[:通过[]组合跳转上(下)一代码块的始（终）
- %:跳转对称的代码块
>Tips:配合n（数字）使用，多步操作更快速

####标记
- m{a-z}: 标记光标所在位置，局部标记，只用于当前文件
- m{A-Z}: 标记光标所在位置，全局标记，退出后仍有效
- `{a-z}: 移动到标记位置。
- :marks 显示所有标记
- `.: 移动到最后改动的地方

####插入
- I: 在当前行第一个非空字符前插入
- A: 在当前行最后插入
- O: 在上面新建一行插入
- ci’, di’, yi’：修改、剪切或复制’(“,<,[,{)之间的内容。

####分割屏幕
- :split(:sp)上下分屏
- :vsplit(:vsp)左右分屏

####排版
- <<:向左缩进 >>:向右缩进
- J:拼接当前行和下一行,适合重拍参数过多的行

####移动
- H: 把光标移到屏幕最顶端一行
- M: 把光标移到屏幕中间一行

###使用频率-中
####行间定位
- +或Enter: 把光标移至下一行第一个非空白字符
- -: 把光标移至上一行第一个非空白字符
- (:前移一句 ):后移一句 {:前移一段 }:后移一段。提高快速移动效率

####行内定位
- e: 前移一个单词，光标停在下一个单词末尾。大写E忽略标点


####跳转
- ,: 回跳至最近一些次G操作定位的行

####翻屏
- ctrl+e: 向下滚动一行
- ctrl+y: 向上滚动一行
- n%: 到文件n%的位置
- zz: 将当前行移动到屏幕中央
- zt: 将当前行移动到屏幕顶端
- zb: 将当前行移动到屏幕底端

###使用频率-低
####标记
- ‘{a-z}: 移动到标记行的行首。
- `{0-9}：回到上[2-10]次关闭vim时最后离开的位置。
- ``: 移动到上次编辑的位置。
- `”: 移动到上次离开的地方。
- :delmarks a b — 删除标记a和b。
- :delmarks a-c — 删除标记a、b和c。
- :delmarks a c-f — 删除标记a、c、d、e、f。
- :delmarks! — 删除当前缓冲区的所有标记。
:help mark-motions 查看更多关于mark的知识。

####插入
- i: 在光标前插入；一个小技巧：按8，再按i，进入插入模式，输入=， 按esc进入命令模式，就会出现8个=。 这在插入分割线时非常有用，如30i+<esc>就插入了36个+组成的分割线
- gI: 在当前行第一列插入
- :r filename在当前位置插入另一个文件的内容
- :[n]r filename在第n行插入另一个文件的内容
- :r !date 在光标处插入当前日期与时间。同理，:r !command可以将其它shell命令的输出插入当前文档

参考文章:[最全的vim快捷键](http://blog.csdn.net/donahue_ldz/article/details/17139361)